/*-------------------------------
 Auto Generated By AutoGenetate.java
     Don't remove or modify
        License GPL/GNU
-------------------------------*/
package com.marik.arm.OpCode.arm.instruction;

import com.marik.arm.OpCode.CondFactory;
import com.marik.arm.OpCode.arm.instruction.factory.ParseSupport;

import static com.marik.vm.OS.*;
import static com.marik.vm.Register.*;
import static com.marik.arm.OpCode.OpUtil.*;

public class LDR_A8_408 extends ParseSupport {

	public static final LDR_A8_408 INSTANCE = new LDR_A8_408();

	@Override
	public String parse(int data) {

		StringBuilder sb = new StringBuilder("LDR");
		sb.append(CondFactory.parse(getCond(data))).append(" ");

		int Rt = getShiftInt(data, 12, 4);
		int Rn = getShiftInt(data, 16, 4);
		int imm12 = getShiftInt(data, 0, 12);
		boolean index = getShiftInt(data, 24, 1) == 1;
		boolean add = getShiftInt(data, 23, 1) == 1;
		boolean wback =getShiftInt(data, 21, 1) == 1;

		sb.append(parseRegister(Rt)).append(" , [");
		sb.append(parseRegister(Rn));
		
		if(!index)
			sb.append("] , #");
		else sb.append(" , #");
		
		if(!add)
			sb.append("-");
		
		sb.append(imm12);
		
		if(index)
			sb.append("]");
		
		if(wback)
			sb.append("!");

		return sb.toString();
	}
	@Override
	public void performExecuteCommand(int data) {
	}

}