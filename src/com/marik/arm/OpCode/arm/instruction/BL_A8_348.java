/*-------------------------------
 Auto Generated By AutoGenetate.java
     Don't remove or modify
        License GPL/GNU
-------------------------------*/
package com.marik.arm.OpCode.arm.instruction;

import static com.marik.arm.OpCode.OpUtil.getShiftInt;
import static com.marik.arm.OpCode.OpUtil.signExtend;

import com.marik.arm.OpCode.CondFactory;
import com.marik.arm.OpCode.arm.instruction.factory.ParseSupport;

public class BL_A8_348 extends ParseSupport {

	public static final BL_A8_348 INSTANCE = new BL_A8_348();

	@Override
	public String parse(int data) {

		int cond = getShiftInt(data, 28, 4);
		if (cond != 0b1111)
			return EncodingA1(data);

		return EncodingA2(data);
	}

	private String EncodingA1(int data) {
		StringBuilder sb = new StringBuilder("BL");
		sb.append(CondFactory.parse(getCond(data)));
		sb.append(" #");

		int imm24 = getShiftInt(data, 0, 24);

		sb.append(signExtend(imm24 << 2, 24));

		return sb.toString();
	}

	private String EncodingA2(int data) {
		StringBuilder sb = new StringBuilder("BLX");

		return sb.toString();
	}

	@Override
	public void performExecuteCommand(int data) {
	}

}