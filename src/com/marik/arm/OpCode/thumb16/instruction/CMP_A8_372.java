/*-------------------------------
 Auto Generated By AutoGenetate.java
     Don't remove or modify
        License GPL/GNU
-------------------------------*/
package com.marik.arm.OpCode.thumb16.instruction;

import com.marik.arm.OpCode.thumb16.instruction.factory.ParseSupport;
import static com.marik.arm.OpCode.OpUtil.*;

public class CMP_A8_372 extends ParseSupport {

	public static final CMP_A8_372 INSTANCE = new CMP_A8_372();

	@Override
	public String parse(int data) {
		int head = getShiftInt(data, 10, 6);
		if (head == 0b010000)
			return super.parse(data);
		if (head == 0b010001)
			return EncodingT2(data);

		return error(data);
	}

	private String EncodingT2(int data) {

		int N = getShiftInt(data, 7, 1);
		int Rm = getShiftInt(data, 3, 4);
		int Rn = getShiftInt(data, 0, 3);

		int Rd = N << 3 | Rn;

		StringBuilder sb = new StringBuilder("CMP ");
		sb.append(parseRegister(Rd)).append(" , ");
		sb.append(parseRegister(Rm));

		return sb.toString();
	}

	@Override
	protected String getOpCode() {
		return "CMP";
	}

	@Override
	protected String getRn(int data) {
		return parseRegister(getShiftInt(data, 0, 3));
	}

	@Override
	protected String getRm(int data) {
		return parseRegister(getShiftInt(data, 3, 3));
	}

}
