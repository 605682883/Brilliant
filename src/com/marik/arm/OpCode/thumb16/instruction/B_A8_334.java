/*-------------------------------
 Auto Generated By AutoGenetate.java
     Don't remove or modify
        License GPL/GNU
-------------------------------*/
package com.marik.arm.OpCode.thumb16.instruction;

import com.marik.arm.OpCode.thumb16.instruction.factory.ParseSupport;
import static com.marik.arm.OpCode.OpUtil.*;

import com.marik.arm.OpCode.CondFactory;

public class B_A8_334 extends ParseSupport {
	public static final B_A8_334 INSTANCE = new B_A8_334();

	public String parse(int data) {

		int head = getShiftInt(data, 12, 4);
		if (head == 0b1101)
			return decodeEncodingT1(data);
		else {
			head = getShiftInt(data, 11, 5);
			if (head == 0b11100)
				return decodeEncodingT2(data);
		}
		return error(data);
	}

	private String decodeEncodingT1(int data) {
		int cond = getShiftInt(data, 8, 4);

		if (cond == 0b1110)
			throw new UnsupportedOperationException("UDF no implements");

		if (cond == 0b1111)
			throw new UnsupportedOperationException("SVC no implements");

		StringBuilder sb = new StringBuilder("B");

		sb.append(CondFactory.parse(cond));

		sb.append(" {PC , #");

		sb.append((signExtend(getShiftInt(data, 0, 8), 8) + 1) << 1).append("}");

		return sb.toString();

	}

	private String decodeEncodingT2(int data) {
		StringBuilder sb = new StringBuilder("B ");

		int imm11 = getShiftInt(data, 0, 11);

		sb.append(" {PC , #");
		return sb.append((signExtend(imm11, 11) + 1) << 1).append("}").toString();
	}
}
