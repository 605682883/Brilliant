/*-------------------------------
 Auto Generated By AutoGenetate.java
     Don't remove or modify
        License GPL/GNU
-------------------------------*/
package com.marik.arm.OpCode.thumb16.instruction;

import static com.marik.vm.OS.*;
import static com.marik.vm.Register.*;
import static com.marik.arm.OpCode.OpUtil.*;
import com.marik.arm.OpCode.thumb16.instruction.factory.ParseSupport;

public class ADD_A8_310 extends ParseSupport {

	public static final ADD_A8_310 INSTANCE = new ADD_A8_310();

	@Override
	public String parse(int data) {

		int head = getShiftInt(data, 9, 7);
		if (head == 0b0001100)
			return super.parse(data);

		head = getShiftInt(data, 8, 8);
		if (head == 0b01000100)
			return EncodingT2(data);

		return error(data);
	}

	private String EncodingT2(int data) {
		int DN = getShiftInt(data, 7, 1);
		int Rm = getShiftInt(data, 3, 4);
		int Rdn = getShiftInt(data, 0, 3);

		int Rd = DN << 3 | Rdn;

		StringBuilder sb = new StringBuilder("ADD ");
		sb.append(parseRegister(Rd)).append(" , ");
		sb.append(parseRegister(Rm));

		return sb.toString();
	}

	@Override
	protected String getOpCode() {
		return "ADDS";
	}

	@Override
	protected String getRn(int data) {
		return parseRegister(getShiftInt(data, 0, 3));
	}

	@Override
	protected String getRm(int data) {
		return parseRegister(getShiftInt(data, 3, 3)) + " , " + parseRegister(getShiftInt(data, 6, 3));
	}

	@Override
	public void performExecuteCommand(int data) {
	}

}
