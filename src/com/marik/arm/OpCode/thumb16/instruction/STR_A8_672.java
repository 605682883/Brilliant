/*-------------------------------
 Auto Generated By AutoGenetate.java
     Don't remove or modify
        License GPL/GNU
-------------------------------*/
package com.marik.arm.OpCode.thumb16.instruction;

import static com.marik.vm.OS.*;
import static com.marik.vm.Register.*;
import static com.marik.arm.OpCode.OpUtil.*;
import com.marik.arm.OpCode.thumb16.instruction.factory.ParseSupport;

public class STR_A8_672 extends ParseSupport {

	public static final STR_A8_672 INSTANCE = new STR_A8_672();

	@Override
	public String parse(int data) {

		int head = getShiftInt(data, 11, 5);
		if (head == 0b01100)
			return EncodingT1(data);

		if (head == 0b10010)
			return EncodingT2(data);

		return error(data);

	}

	private String EncodingT2(int data) {
		int Rt = getShiftInt(data, 8, 3);
		int imm8 = getShiftInt(data, 0, 8);

		StringBuilder sb = new StringBuilder("STR ");
		sb.append(parseRegister(Rt));
		sb.append(" , [SP , #").append(imm8 << 2).append("]");

		return sb.toString();
	}

	private String EncodingT1(int data) {

		StringBuilder sb = new StringBuilder("STR ");

		int imm = getShiftInt(data, 6, 5);
		sb.append(parseRegister(getShiftInt(data, 0, 3))).append(" , [");

		if (imm > 0)
			sb.append(parseRegister(getShiftInt(data, 3, 3)) + " , #" + (imm << 2));
		else
			sb.append(parseRegister(getShiftInt(data, 3, 3)));

		sb.append("]");
		return sb.toString();
	}

	@Override
	public void performExecuteCommand(int data) {
	}

}
