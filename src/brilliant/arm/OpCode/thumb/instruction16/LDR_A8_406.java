/*-------------------------------
 Auto Generated By AutoGenetate.java
     Don't remove or modify
        License GPL/GNU
-------------------------------*/
package brilliant.arm.OpCode.thumb.instruction16;

import static brilliant.arm.OpCode.OpUtil.getShiftInt;
import static brilliant.arm.OpCode.OpUtil.parseRegister;
import brilliant.arm.OpCode.thumb.instruction16.support.ParseSupport;

public class LDR_A8_406 extends ParseSupport {

	public static final LDR_A8_406 INSTANCE = new LDR_A8_406();

	@Override
	public String parse(int data) {

		int head = getShiftInt(data, 11, 5);
		if (head == 0b01101)
			return EncodingT1(data);
		if (head == 0b10011)
			return super.parse(data);

		return error(data);
	}

	private String EncodingT1(int data) {
		int imm5 = getShiftInt(data, 6, 5);
		int Rn = getShiftInt(data, 3, 3);
		int Rt = getShiftInt(data, 0, 3);
		StringBuilder sb = new StringBuilder("LDR ");
		sb.append(parseRegister(Rt)).append(" , [").append(parseRegister(Rn));
		if (imm5 != 0b00000)
			sb.append(" , #").append(imm5 << 2);

		sb.append("]");

		return sb.toString();
	}

	@Override
	protected String getOpCode(int data) {
		return "LDR";
	}

	@Override
	protected String getRn(int data) {
		return parseRegister(getShiftInt(data, 8, 3));
	}

	@Override
	protected String getRm(int data) {
		int imm8 = getShiftInt(data, 0, 8);
		StringBuilder sb = new StringBuilder();
		sb.append("[SP");
		if (imm8 != 0b00000000)
			sb.append(" , #").append(imm8 << 2);

		sb.append("]");
		return sb.toString();
	}

	@Override
	public void performExecuteCommand(int data) {
	}

}
